################################################################################
# Revel configuration file
# More info at http://revel.github.io/manual/appconf.html
################################################################################

app.name = ApiServer
app.secret = kuZ2TEmbygA5I5dFrDbMqB8ixBihzt2XjUMKfK1TebziisjTb8r8htnpMjfEASFi
app.behind.proxy = true
# The IP address on which to listen.
http.addr = ${HOST}
# The port on which to listen.
http.port = 9000
# Whether to use SSL or not.
http.ssl = false
# Path to an X509 certificate file, if using SSL.
#http.sslcert =

# Path to an X509 certificate key, if using SSL.
#http.sslkey =


http.timeout.read = 90
http.timeout.write = 60
cookie.prefix = REVEL

# cookie.secure = false
# Limit cookie access to a given domain.
#cookie.domain =
session.expires = 720h

format.date     = 2006-01-02
format.datetime = 2006-01-02 15:04

results.chunked = false

# The default language of this application.
i18n.default_language = en
module.static = github.com/revel/modules/static
answer.file = ${ANSWERFILE}

[dev]
mode.dev = false
results.pretty = true
watch = true
watch.mode = normal
#watch.gopath = true
module.testrunner = github.com/revel/modules/testrunner
log.all.filter.module.app = stdout    # Log all loggers for the application to the stdout
log.error.nfilter.module.app = stderr # Everything else that logs an error to stderr
log.crit.output = stderr              # Everything that logs something as critical goes to this
log.request.output = stdout

admin.role = "yatuhashi"
password.salt= "yatuhashi"

db.type = "sqlite3"
db.args = "./db.sqlite3"

[prod]
mode.dev = false
results.pretty = false
watch = false
module.testrunner =
log.warn.output  = log/%(app.name)-warn.json    # Log all warn messages to file
log.error.output = log/%(app.name)-error.json   # Log all errors to file
log.crit.output = log/%(app.name)-critical.json # Log all critical to file
log.request.output = log/%(app.name)s-requests.json

admin.role = ${ADMINROLE}
password.salt= ${PASSWORDSALT}
cache.redis = true
cache.hosts = ${REDIS}

db.type = "postgres"
db.args = ${DBARGS}
